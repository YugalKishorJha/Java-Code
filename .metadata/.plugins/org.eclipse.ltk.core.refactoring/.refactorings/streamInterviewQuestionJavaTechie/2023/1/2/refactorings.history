<?xml version="1.0" encoding="UTF-8"?>
<session version="1.0">&#x0A;<refactoring comment="Move element &apos;GropuingByPractice.java&apos; to &apos;streamInterviewQuestionJavaTechie/src/streamInterviewQuestionJavaTechie&apos;&#x0D;&#x0A;- Original project: &apos;streamInterviewQuestionJavaTechie&apos;&#x0D;&#x0A;- Destination element: &apos;streamInterviewQuestionJavaTechie/src/streamInterviewQuestionJavaTechie&apos;&#x0D;&#x0A;- Original element: &apos;GropuingByPractice.java&apos;&#x0D;&#x0A;- Update references to refactored element" description="Move compilation unit" destination="/src&lt;streamInterviewQuestionJavaTechie" element1="/src&lt;{GropuingByPractice.java" files="0" flags="589830" folders="0" id="org.eclipse.jdt.ui.move" policy="org.eclipse.jdt.ui.moveResources" qualified="false" references="true" stamp="1673172660117" units="1" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;collect&apos; from expression &apos;Stream.of(new Employee(101,&quot;Ramesh&quot;,&quot;IT&quot;,45000),new Employee(105,&quot;Mikhail&quot;,&quot;IT&quot;,71000),new Employee(108,&quot;Akhil&quot;,&quot;Buisness&quot;,95000),new Employee(103,&quot;Amrish&quot;,&quot;Buisness&quot;,95000),new Employee(102,&quot;Rupa&quot;,&quot;Service&quot;,35000),new Employee(104,&quot;Lipsa&quot;,&quot;Service&quot;,45000)).collect(Collectors.groupingBy(Employee::getDept))&apos;&#x0D;&#x0A;- Original project: &apos;streamInterviewQuestionJavaTechie&apos;&#x0D;&#x0A;- Variable name: &apos;collect&apos;&#x0D;&#x0A;- Destination method: &apos;streamInterviewQuestionJavaTechie.GropuingByPractice.main(...)&apos;&#x0D;&#x0A;- Variable expression: &apos;Stream.of(new Employee(101,&quot;Ramesh&quot;,&quot;IT&quot;,45000),new Employee(105,&quot;Mikhail&quot;,&quot;IT&quot;,71000),new Employee(108,&quot;Akhil&quot;,&quot;Buisness&quot;,95000),new Employee(103,&quot;Amrish&quot;,&quot;Buisness&quot;,95000),new Employee(102,&quot;Rupa&quot;,&quot;Service&quot;,35000),new Employee(104,&quot;Lipsa&quot;,&quot;Service&quot;,45000)).collect(Collectors.groupingBy(Employee::getDept))&apos;&#x0D;&#x0A;- Replace occurrences of expression with variable" description="Extract local variable &apos;collect&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;streamInterviewQuestionJavaTechie{GropuingByPractice.java" name="collect" replace="true" selection="206 361" stamp="1673173064144" varType="false" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;employee&apos; from expression &apos;new Employee(101,&quot;Ramesh&quot;,&quot;IT&quot;,45000,new Employee(105,&quot;Mikhail&quot;,&quot;IT&quot;,71000),new Employee(108,&quot;Akhil&quot;,&quot;Buisness&quot;,95000),new Employee(103,&quot;Amrish&quot;,&quot;Buisness&quot;,95000),new Employee(102,&quot;Rupa&quot;,&quot;Service&quot;,35000),new Employee(104,&quot;Lipsa&quot;,&quot;Service&quot;,45000))&apos;&#x0D;&#x0A;- Original project: &apos;streamInterviewQuestionJavaTechie&apos;&#x0D;&#x0A;- Variable name: &apos;employee&apos;&#x0D;&#x0A;- Destination method: &apos;streamInterviewQuestionJavaTechie.GropuingByPractice.main(...)&apos;&#x0D;&#x0A;- Variable expression: &apos;new Employee(101,&quot;Ramesh&quot;,&quot;IT&quot;,45000,new Employee(105,&quot;Mikhail&quot;,&quot;IT&quot;,71000),new Employee(108,&quot;Akhil&quot;,&quot;Buisness&quot;,95000),new Employee(103,&quot;Amrish&quot;,&quot;Buisness&quot;,95000),new Employee(102,&quot;Rupa&quot;,&quot;Service&quot;,35000),new Employee(104,&quot;Lipsa&quot;,&quot;Service&quot;,45000))&apos;&#x0D;&#x0A;- Replace occurrences of expression with variable" description="Extract local variable &apos;employee&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;streamInterviewQuestionJavaTechie{GropuingByPractice.java" name="employee" replace="true" selection="279 285" stamp="1673173786740" varType="false" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;comparing&apos; from expression &apos;Comparator.comparing(Employee::getId)&apos;&#x0D;&#x0A;- Original project: &apos;streamInterviewQuestionJavaTechie&apos;&#x0D;&#x0A;- Variable name: &apos;comparing&apos;&#x0D;&#x0A;- Destination method: &apos;streamInterviewQuestionJavaTechie.GropuingByPractice.main(...)&apos;&#x0D;&#x0A;- Variable expression: &apos;Comparator.comparing(Employee::getId)&apos;&#x0D;&#x0A;- Replace occurrences of expression with variable" description="Extract local variable &apos;comparing&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;streamInterviewQuestionJavaTechie{GropuingByPractice.java" name="comparing" replace="true" selection="586 37" stamp="1673173873860" varType="false" version="1.0"/>&#x0A;&#x0A;<refactoring comment="Extract local variable &apos;collect&apos; from expression &apos;Stream.of(employeeList).sorted().collect(Collectors.toList())&apos;&#x0D;&#x0A;- Original project: &apos;streamInterviewQuestionJavaTechie&apos;&#x0D;&#x0A;- Variable name: &apos;collect&apos;&#x0D;&#x0A;- Destination method: &apos;streamInterviewQuestionJavaTechie.GropuingByPractice.main(...)&apos;&#x0D;&#x0A;- Variable expression: &apos;Stream.of(employeeList).sorted().collect(Collectors.toList())&apos;&#x0D;&#x0A;- Replace occurrences of expression with variable" description="Extract local variable &apos;collect&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;streamInterviewQuestionJavaTechie{GropuingByPractice.java" name="collect" replace="true" selection="667 61" stamp="1673173976727" varType="false" version="1.0"/>&#x0A;&#x0A;<refactoring comment="Extract local variable &apos;comparing&apos; from expression &apos;Comparator.comparing(Employee::getId)&apos;&#x0D;&#x0A;- Original project: &apos;streamInterviewQuestionJavaTechie&apos;&#x0D;&#x0A;- Variable name: &apos;comparing&apos;&#x0D;&#x0A;- Destination method: &apos;streamInterviewQuestionJavaTechie.GropuingByPractice.main(...)&apos;&#x0D;&#x0A;- Variable expression: &apos;Comparator.comparing(Employee::getId)&apos;&#x0D;&#x0A;- Replace occurrences of expression with variable" description="Extract local variable &apos;comparing&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;streamInterviewQuestionJavaTechie{GropuingByPractice.java" name="comparing" replace="true" selection="522 37" stamp="1673174666148" varType="false" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;collect&apos; from expression &apos;employeeList.stream().collect(Collectors.groupingBy(Employee::getDept,Collectors.maxBy(Comparator.comparing(Employee::getSal))))&apos;&#x0D;&#x0A;- Original project: &apos;streamInterviewQuestionJavaTechie&apos;&#x0D;&#x0A;- Variable name: &apos;collect&apos;&#x0D;&#x0A;- Destination method: &apos;streamInterviewQuestionJavaTechie.GropuingByPractice.main(...)&apos;&#x0D;&#x0A;- Variable expression: &apos;employeeList.stream().collect(Collectors.groupingBy(Employee::getDept,Collectors.maxBy(Comparator.comparing(Employee::getSal))))&apos;&#x0D;&#x0A;- Replace occurrences of expression with variable" description="Extract local variable &apos;collect&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;streamInterviewQuestionJavaTechie{GropuingByPractice.java" name="collect" replace="true" selection="555 135" stamp="1673174918866" varType="false" version="1.0"/>&#x0A;<refactoring accessors="true" comment="Delete element from project &apos;streamInterviewQuestionJavaTechie&apos;&#x0D;&#x0A;- Original project: &apos;streamInterviewQuestionJavaTechie&apos;&#x0D;&#x0A;- Original element: &apos;streamInterviewQuestionJavaTechie.GropuingByPractice.java&apos;" description="Delete element" element1="/src&lt;streamInterviewQuestionJavaTechie{GropuingByPractice.java" elements="1" flags="589830" id="org.eclipse.jdt.ui.delete" resources="0" stamp="1673177381926" subPackages="false" version="1.0"/>&#x0A;&#x0A;<refactoring comment="Extract local variable &apos;split&apos; from expression &apos;str.split(&quot;&quot;)&apos;&#x0D;&#x0A;- Original project: &apos;streamInterviewQuestionJavaTechie&apos;&#x0D;&#x0A;- Variable name: &apos;split&apos;&#x0D;&#x0A;- Destination method: &apos;streamInterviewQuestionJavaTechie.palindromeString.main(...)&apos;&#x0D;&#x0A;- Variable expression: &apos;str.split(&quot;&quot;)&apos;&#x0D;&#x0A;- Replace occurrences of expression with variable" description="Extract local variable &apos;split&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;streamInterviewQuestionJavaTechie{palindromeString.java" name="split" replace="true" selection="207 13" stamp="1673516185792" varType="false" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;split&apos; from expression &apos;name.split(&quot;&quot;)&apos;&#x0D;&#x0A;- Original project: &apos;streamInterviewQuestionJavaTechie&apos;&#x0D;&#x0A;- Variable name: &apos;split&apos;&#x0D;&#x0A;- Destination method: &apos;ReverseStringUsingJava8.main(...)&apos;&#x0D;&#x0A;- Variable expression: &apos;name.split(&quot;&quot;)&apos;&#x0D;&#x0A;- Replace occurrences of expression with variable" description="Extract local variable &apos;split&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;{ReverseStringUsingJava8.java" name="split" replace="true" selection="142 14" stamp="1673518883211" varType="false" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;collect&apos; from expression &apos;Arrays.stream(ar).boxed().collect(Collectors.toList())&apos;&#x0D;&#x0A;- Original project: &apos;streamInterviewQuestionJavaTechie&apos;&#x0D;&#x0A;- Variable name: &apos;collect&apos;&#x0D;&#x0A;- Destination method: &apos;streamInterviewQuestionJavaTechie.NonUniqueElements.main(...)&apos;&#x0D;&#x0A;- Variable expression: &apos;Arrays.stream(ar).boxed().collect(Collectors.toList())&apos;&#x0D;&#x0A;- Replace occurrences of expression with variable" description="Extract local variable &apos;collect&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;streamInterviewQuestionJavaTechie{NonUniqueElements.java" name="collect" replace="true" selection="265 54" stamp="1673521291687" varType="false" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;array&apos; from expression &apos;Arrays.stream(ar).boxed().toArray(Integer []::new)&apos;&#x0D;&#x0A;- Original project: &apos;streamInterviewQuestionJavaTechie&apos;&#x0D;&#x0A;- Variable name: &apos;array&apos;&#x0D;&#x0A;- Destination method: &apos;streamInterviewQuestionJavaTechie.NonUniqueElements.main(...)&apos;&#x0D;&#x0A;- Variable expression: &apos;Arrays.stream(ar).boxed().toArray(Integer []::new)&apos;&#x0D;&#x0A;- Replace occurrences of expression with variable" description="Extract local variable &apos;array&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;streamInterviewQuestionJavaTechie{NonUniqueElements.java" name="array" replace="true" selection="245 0" stamp="1673521407416" varType="false" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;collect&apos; from expression &apos;Stream.of(array).filter(x -&gt; !hs.add(x)).collect(Collectors.toSet())&apos;&#x0D;&#x0A;- Original project: &apos;streamInterviewQuestionJavaTechie&apos;&#x0D;&#x0A;- Variable name: &apos;collect&apos;&#x0D;&#x0A;- Destination method: &apos;streamInterviewQuestionJavaTechie.NonUniqueElements.main(...)&apos;&#x0D;&#x0A;- Variable expression: &apos;Stream.of(array).filter(x -&gt; !hs.add(x)).collect(Collectors.toSet())&apos;&#x0D;&#x0A;- Replace occurrences of expression with variable" description="Extract local variable &apos;collect&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;streamInterviewQuestionJavaTechie{NonUniqueElements.java" name="collect" replace="true" selection="425 66" stamp="1673522891895" varType="false" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;split&apos; from expression &apos;s.split(&quot;&quot;)&apos;&#x0D;&#x0A;- Original project: &apos;streamInterviewQuestionJavaTechie&apos;&#x0D;&#x0A;- Variable name: &apos;split&apos;&#x0D;&#x0A;- Destination method: &apos;streamInterviewQuestionJavaTechie.CountsNoOfVowelsAndConsonants.main(...)&apos;&#x0D;&#x0A;- Variable expression: &apos;s.split(&quot;&quot;)&apos;&#x0D;&#x0A;- Replace occurrences of expression with variable" description="Extract local variable &apos;split&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;streamInterviewQuestionJavaTechie{CountsNoOfVowelsAndConsonants.java" name="split" replace="true" selection="168 11" stamp="1673524274080" varType="false" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;count&apos; from expression &apos;Arrays.stream(split).filter(a -&gt; a == &quot;a&quot; || a == &quot;e&quot; || a == &quot;i&quot; || a == &quot;o&quot; || a == &quot;u&quot;).count()&apos;&#x0D;&#x0A;- Original project: &apos;streamInterviewQuestionJavaTechie&apos;&#x0D;&#x0A;- Variable name: &apos;count&apos;&#x0D;&#x0A;- Destination method: &apos;streamInterviewQuestionJavaTechie.CountsNoOfVowelsAndConsonants.main(...)&apos;&#x0D;&#x0A;- Variable expression: &apos;Arrays.stream(split).filter(a -&gt; a == &quot;a&quot; || a == &quot;e&quot; || a == &quot;i&quot; || a == &quot;o&quot; || a == &quot;u&quot;).count()&apos;&#x0D;&#x0A;- Replace occurrences of expression with variable" description="Extract local variable &apos;count&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;streamInterviewQuestionJavaTechie{CountsNoOfVowelsAndConsonants.java" name="count" replace="true" selection="229 78" stamp="1673524480321" varType="false" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;collect&apos; from expression &apos;Arrays.stream(s1.split(&quot;&quot;)).collect(Collectors.groupingBy(Function.identity(),Collectors.counting()))&apos;&#x0D;&#x0A;- Original project: &apos;streamInterviewQuestionJavaTechie&apos;&#x0D;&#x0A;- Variable name: &apos;collect&apos;&#x0D;&#x0A;- Destination method: &apos;streamInterviewQuestionJavaTechie.Anagrams.main(...)&apos;&#x0D;&#x0A;- Variable expression: &apos;Arrays.stream(s1.split(&quot;&quot;)).collect(Collectors.groupingBy(Function.identity(),Collectors.counting()))&apos;&#x0D;&#x0A;- Replace occurrences of expression with variable" description="Extract local variable &apos;collect&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;streamInterviewQuestionJavaTechie{Anagrams.java" name="collect" replace="true" selection="264 107" stamp="1673527655178" varType="false" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;collect&apos; from expression &apos;Arrays.stream(str.split(&quot;&quot;)).distinct().collect(Collectors.toList())&apos;&#x0D;&#x0A;- Original project: &apos;streamInterviewQuestionJavaTechie&apos;&#x0D;&#x0A;- Variable name: &apos;collect&apos;&#x0D;&#x0A;- Destination method: &apos;streamInterviewQuestionJavaTechie.FirstNonRepeatedCharacter.main(...)&apos;&#x0D;&#x0A;- Variable expression: &apos;Arrays.stream(str.split(&quot;&quot;)).distinct().collect(Collectors.toList())&apos;&#x0D;&#x0A;- Replace occurrences of expression with variable" description="Extract local variable &apos;collect&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;streamInterviewQuestionJavaTechie{FirstNonRepeatedCharacter.java" name="collect" replace="true" selection="228 68" stamp="1673544857687" varType="false" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;split&apos; from expression &apos;str.split(&quot;&quot;)&apos;&#x0D;&#x0A;- Original project: &apos;streamInterviewQuestionJavaTechie&apos;&#x0D;&#x0A;- Variable name: &apos;split&apos;&#x0D;&#x0A;- Destination method: &apos;streamInterviewQuestionJavaTechie.FirstNonRepeatedCharacter.main(...)&apos;&#x0D;&#x0A;- Variable expression: &apos;str.split(&quot;&quot;)&apos;&#x0D;&#x0A;- Replace occurrences of expression with variable" description="Extract local variable &apos;split&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;streamInterviewQuestionJavaTechie{FirstNonRepeatedCharacter.java" name="split" replace="true" selection="298 13" stamp="1673545026153" varType="false" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;collect2&apos; from expression &apos;Arrays.stream(split).collect(Collectors.groupingBy(Function.identity(),Collectors.counting()))&apos;&#x0D;&#x0A;- Original project: &apos;streamInterviewQuestionJavaTechie&apos;&#x0D;&#x0A;- Variable name: &apos;collect2&apos;&#x0D;&#x0A;- Destination method: &apos;streamInterviewQuestionJavaTechie.FirstNonRepeatedCharacter.main(...)&apos;&#x0D;&#x0A;- Variable expression: &apos;Arrays.stream(split).collect(Collectors.groupingBy(Function.identity(),Collectors.counting()))&apos;&#x0D;&#x0A;- Replace occurrences of expression with variable" description="Extract local variable &apos;collect2&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;streamInterviewQuestionJavaTechie{FirstNonRepeatedCharacter.java" name="collect2" replace="true" selection="793 101" stamp="1673549032080" varType="false" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;round&apos; from expression &apos;Math.round(Math.random() * 100)&apos;&#x0D;&#x0A;- Original project: &apos;streamInterviewQuestionJavaTechie&apos;&#x0D;&#x0A;- Variable name: &apos;round&apos;&#x0D;&#x0A;- Destination method: &apos;streamInterviewQuestionJavaTechie.SearchMissingNumbersInArrayForm1to100.main(...)&apos;&#x0D;&#x0A;- Variable expression: &apos;Math.round(Math.random() * 100)&apos;&#x0D;&#x0A;- Replace occurrences of expression with variable" description="Extract local variable &apos;round&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;streamInterviewQuestionJavaTechie{SearchMissingNumbersInArrayForm1to100.java" name="round" replace="true" selection="262 29" stamp="1673550692108" varType="false" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;of&apos; from expression &apos;List.of(10,20,3,0,4,2,0,4,20,2,5)&apos;&#x0D;&#x0A;- Original project: &apos;streamInterviewQuestionJavaTechie&apos;&#x0D;&#x0A;- Variable name: &apos;of&apos;&#x0D;&#x0A;- Destination method: &apos;streamInterviewQuestionJavaTechie.FindTheThridLargestElementInListBrillo.main(...)&apos;&#x0D;&#x0A;- Variable expression: &apos;List.of(10,20,3,0,4,2,0,4,20,2,5)&apos;&#x0D;&#x0A;- Replace occurrences of expression with variable" description="Extract local variable &apos;of&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;streamInterviewQuestionJavaTechie{FindTheThridLargestElementInListBrillo.java" name="of" replace="true" selection="178 33" stamp="1673687257161" varType="false" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;integer&apos; from expression &apos;lhs.stream().collect(Collectors.toList()).get(2)&apos;&#x0D;&#x0A;- Original project: &apos;streamInterviewQuestionJavaTechie&apos;&#x0D;&#x0A;- Variable name: &apos;integer&apos;&#x0D;&#x0A;- Destination method: &apos;streamInterviewQuestionJavaTechie.FindTheThridLargestElementInListBrillo.main(...)&apos;&#x0D;&#x0A;- Variable expression: &apos;lhs.stream().collect(Collectors.toList()).get(2)&apos;&#x0D;&#x0A;- Replace occurrences of expression with variable" description="Extract local variable &apos;integer&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;streamInterviewQuestionJavaTechie{FindTheThridLargestElementInListBrillo.java" name="integer" replace="true" selection="614 48" stamp="1673687901487" varType="false" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;limit&apos; from expression &apos;ll.stream().sorted(Comparator.reverseOrder()).distinct().limit(1)&apos;&#x0D;&#x0A;- Original project: &apos;streamInterviewQuestionJavaTechie&apos;&#x0D;&#x0A;- Variable name: &apos;limit&apos;&#x0D;&#x0A;- Destination method: &apos;streamInterviewQuestionJavaTechie.FindTheThridLargestElementInListBrillo.main(...)&apos;&#x0D;&#x0A;- Variable expression: &apos;ll.stream().sorted(Comparator.reverseOrder()).distinct().limit(1)&apos;&#x0D;&#x0A;- Replace occurrences of expression with variable" description="Extract local variable &apos;limit&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;streamInterviewQuestionJavaTechie{FindTheThridLargestElementInListBrillo.java" name="limit" replace="true" selection="892 65" stamp="1673693032508" varType="false" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;limit&apos; from expression &apos;ll.stream().sorted(Comparator.reverseOrder()).distinct().skip(1).limit(1)&apos;&#x0D;&#x0A;- Original project: &apos;streamInterviewQuestionJavaTechie&apos;&#x0D;&#x0A;- Variable name: &apos;limit&apos;&#x0D;&#x0A;- Destination method: &apos;streamInterviewQuestionJavaTechie.FindTheThridLargestElementInListBrillo.main(...)&apos;&#x0D;&#x0A;- Variable expression: &apos;ll.stream().sorted(Comparator.reverseOrder()).distinct().skip(1).limit(1)&apos;&#x0D;&#x0A;- Replace occurrences of expression with variable" description="Extract local variable &apos;limit&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;streamInterviewQuestionJavaTechie{FindTheThridLargestElementInListBrillo.java" name="limit" replace="true" selection="926 73" stamp="1673693061962" varType="false" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;string&apos; from expression &apos;ll.stream().sorted(Comparator.reverseOrder()).distinct().skip(1).limit(1).toString()&apos;&#x0D;&#x0A;- Original project: &apos;streamInterviewQuestionJavaTechie&apos;&#x0D;&#x0A;- Variable name: &apos;string&apos;&#x0D;&#x0A;- Destination method: &apos;streamInterviewQuestionJavaTechie.FindTheThridLargestElementInListBrillo.main(...)&apos;&#x0D;&#x0A;- Variable expression: &apos;ll.stream().sorted(Comparator.reverseOrder()).distinct().skip(1).limit(1).toString()&apos;&#x0D;&#x0A;- Replace occurrences of expression with variable" description="Extract local variable &apos;string&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;streamInterviewQuestionJavaTechie{FindTheThridLargestElementInListBrillo.java" name="string" replace="true" selection="927 84" stamp="1673693090464" varType="false" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;secondHighest&apos; from expression &apos;ll.stream().sorted(Comparator.reverseOrder()).distinct().skip(1).limit(1).findFirst().get()&apos;&#x0D;&#x0A;- Original project: &apos;streamInterviewQuestionJavaTechie&apos;&#x0D;&#x0A;- Variable name: &apos;secondHighest&apos;&#x0D;&#x0A;- Destination method: &apos;streamInterviewQuestionJavaTechie.FindTheThridLargestElementInListBrillo.main(...)&apos;&#x0D;&#x0A;- Variable expression: &apos;ll.stream().sorted(Comparator.reverseOrder()).distinct().skip(1).limit(1).findFirst().get()&apos;&#x0D;&#x0A;- Replace occurrences of expression with variable" description="Extract local variable &apos;secondHighest&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;streamInterviewQuestionJavaTechie{FindTheThridLargestElementInListBrillo.java" name="secondHighest" replace="true" selection="928 91" stamp="1673693417679" varType="false" version="1.0"/>
</session>