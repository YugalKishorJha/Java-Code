<?xml version="1.0" encoding="UTF-8"?>
<session version="1.0">&#x0A;<refactoring comment="Extract local variable &apos;collect&apos; from expression &apos;ll2.stream().collect(Collectors.groupingBy(s -&gt; s.id))&apos;&#x0D;&#x0A;- Original project: &apos;StreamAPI&apos;&#x0D;&#x0A;- Variable name: &apos;collect&apos;&#x0D;&#x0A;- Destination method: &apos;GroupingBy.main(...)&apos;&#x0D;&#x0A;- Variable expression: &apos;ll2.stream().collect(Collectors.groupingBy(s -&gt; s.id))&apos;&#x0D;&#x0A;- Replace occurrences of expression with variable" description="Extract local variable &apos;collect&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;{GroupingBy.java" name="collect" replace="true" selection="342 52" stamp="1672116821638" varType="false" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;list&apos; from expression &apos;ll.stream().sorted((s1,s2) -&gt; s1.name.compareTo(s2.name)).collect(Collectors.toList())&apos;&#x0D;&#x0A;- Original project: &apos;StreamAPI&apos;&#x0D;&#x0A;- Variable name: &apos;list&apos;&#x0D;&#x0A;- Destination method: &apos;Comparator.main(...)&apos;&#x0D;&#x0A;- Variable expression: &apos;ll.stream().sorted((s1,s2) -&gt; s1.name.compareTo(s2.name)).collect(Collectors.toList())&apos;&#x0D;&#x0A;- Replace occurrences of expression with variable" description="Extract local variable &apos;list&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;{Comparator.java" name="list" replace="true" selection="409 87" stamp="1672217218996" varType="false" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;collect&apos; from expression &apos;ll.stream().filter(Limit_Skip_Dropwhile_TakeWhile::filterByMarks).limit(2).collect(Collectors.toList())&apos;&#x0D;&#x0A;- Original project: &apos;StreamAPI&apos;&#x0D;&#x0A;- Variable name: &apos;collect&apos;&#x0D;&#x0A;- Destination method: &apos;Limit_Skip_Dropwhile_TakeWhile.main(...)&apos;&#x0D;&#x0A;- Variable expression: &apos;ll.stream().filter(Limit_Skip_Dropwhile_TakeWhile::filterByMarks).limit(2).collect(Collectors.toList())&apos;&#x0D;&#x0A;- Replace occurrences of expression with variable" description="Extract local variable &apos;collect&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;{Limit_Skip_Dropwhile_TakeWhile.java" name="collect" replace="true" selection="425 103" stamp="1672220433784" varType="false" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;collect&apos; from expression &apos;ll.stream().collect(Collectors.groupingBy(Employee::getSal))&apos;&#x0D;&#x0A;- Original project: &apos;StreamAPI&apos;&#x0D;&#x0A;- Variable name: &apos;collect&apos;&#x0D;&#x0A;- Destination method: &apos;GroupingByAdvance.main(...)&apos;&#x0D;&#x0A;- Variable expression: &apos;ll.stream().collect(Collectors.groupingBy(Employee::getSal))&apos;&#x0D;&#x0A;- Replace occurrences of expression with variable" description="Extract local variable &apos;collect&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;{GroupingByAdvance.java" name="collect" replace="true" selection="630 60" stamp="1672288872617" varType="false" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;collect&apos; from expression &apos;ll.stream().collect(Collectors.groupingBy(Employee::getSal))&apos;&#x0D;&#x0A;- Original project: &apos;StreamAPI&apos;&#x0D;&#x0A;- Variable name: &apos;collect&apos;&#x0D;&#x0A;- Destination method: &apos;GroupingByAdvance.main(...)&apos;&#x0D;&#x0A;- Variable expression: &apos;ll.stream().collect(Collectors.groupingBy(Employee::getSal))&apos;&#x0D;&#x0A;- Replace occurrences of expression with variable" description="Extract local variable &apos;collect&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;{GroupingByAdvance.java" name="collect" replace="true" selection="568 60" stamp="1672302215563" varType="false" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;counting&apos; from expression &apos;Collectors.counting()&apos;&#x0D;&#x0A;- Original project: &apos;StreamAPI&apos;&#x0D;&#x0A;- Variable name: &apos;counting&apos;&#x0D;&#x0A;- Destination method: &apos;GroupingByAdvance.main(...)&apos;&#x0D;&#x0A;- Variable expression: &apos;Collectors.counting()&apos;&#x0D;&#x0A;- Replace occurrences of expression with variable" description="Extract local variable &apos;counting&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;{GroupingByAdvance.java" name="counting" replace="true" selection="1458 21" stamp="1672305041308" varType="false" version="1.0"/>&#x0A;<refactoring accessors="true" comment="Delete element from project &apos;StreamAPI&apos;&#x0D;&#x0A;- Original project: &apos;StreamAPI&apos;&#x0D;&#x0A;- Original element: &apos;Comparator_Comapring.java&apos;" description="Delete element" element1="/src&lt;{Comparator_Comapring.java" elements="1" flags="589830" id="org.eclipse.jdt.ui.delete" resources="0" stamp="1672400364522" subPackages="false" version="1.0"/>&#x0A;<refactoring comment="Copy element &apos;Employee.java&apos; to &apos;streamInterviewQuestionJavaTechie/src/streamInterviewQuestionJavaTechie&apos;&#x0D;&#x0A;- Original project: &apos;StreamAPI&apos;&#x0D;&#x0A;- Destination element: &apos;streamInterviewQuestionJavaTechie/src/streamInterviewQuestionJavaTechie&apos;&#x0D;&#x0A;- Original element: &apos;Employee.java&apos;" description="Copy compilation unit" destination="=streamInterviewQuestionJavaTechie/src&lt;streamInterviewQuestionJavaTechie" element1="/src&lt;{Employee.java" files="0" flags="589830" folders="0" id="org.eclipse.jdt.ui.copy" policy="org.eclipse.jdt.ui.copyResources" stamp="1672400814587" units="1" version="1.0"/>
</session>