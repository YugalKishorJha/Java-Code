<?xml version="1.0" encoding="UTF-8"?>
<session version="1.0">&#x0A;<refactoring comment="Extract local variable &apos;of&apos; from expression &apos;List.of(3,2,52,01,32,3,0,21)&apos;&#x0D;&#x0A;- Original project: &apos;StreamAPI&apos;&#x0D;&#x0A;- Variable name: &apos;of&apos;&#x0D;&#x0A;- Destination method: &apos;Fun.main(...)&apos;&#x0D;&#x0A;- Variable expression: &apos;List.of(3,2,52,01,32,3,0,21)&apos;&#x0D;&#x0A;- Replace occurrences of expression with variable" description="Extract local variable &apos;of&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;{Fun.java" name="of" replace="true" selection="144 28" stamp="1672914883781" varType="false" version="1.0"/>&#x0A;<refactoring accessors="true" comment="Delete element from project &apos;StreamAPI&apos;&#x0D;&#x0A;- Original project: &apos;StreamAPI&apos;&#x0D;&#x0A;- Original element: &apos;Fun.java&apos;" description="Delete element" element1="/src&lt;{Fun.java" elements="1" flags="589830" id="org.eclipse.jdt.ui.delete" resources="0" stamp="1672915547726" subPackages="false" version="1.0"/>&#x0A;<refactoring accessors="true" comment="Delete element from project &apos;StreamAPI&apos;&#x0D;&#x0A;- Original project: &apos;StreamAPI&apos;&#x0D;&#x0A;- Original element: &apos;Run.java&apos;" description="Delete element" element1="/src&lt;{Run.java" elements="1" flags="589830" id="org.eclipse.jdt.ui.delete" resources="0" stamp="1672915555373" subPackages="false" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;collect&apos; from expression &apos;ll.stream().collect(Collectors.maxBy(Comparator.comparing(Employee::getSal)))&apos;&#x0D;&#x0A;- Original project: &apos;StreamAPI&apos;&#x0D;&#x0A;- Variable name: &apos;collect&apos;&#x0D;&#x0A;- Destination method: &apos;Practice.main(...)&apos;&#x0D;&#x0A;- Variable expression: &apos;ll.stream().collect(Collectors.maxBy(Comparator.comparing(Employee::getSal)))&apos;&#x0D;&#x0A;- Replace occurrences of expression with variable" description="Extract local variable &apos;collect&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;{Practice.java" name="collect" replace="true" selection="781 83" stamp="1672915676559" varType="false" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;collect&apos; from expression &apos;ll.stream().collect(Collectors.averagingInt(Employee::getSal))&apos;&#x0D;&#x0A;- Original project: &apos;StreamAPI&apos;&#x0D;&#x0A;- Variable name: &apos;collect&apos;&#x0D;&#x0A;- Destination method: &apos;Practice.main(...)&apos;&#x0D;&#x0A;- Variable expression: &apos;ll.stream().collect(Collectors.averagingInt(Employee::getSal))&apos;&#x0D;&#x0A;- Replace occurrences of expression with variable" description="Extract local variable &apos;collect&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;{Practice.java" name="collect" replace="true" selection="814 67" stamp="1672915795152" varType="false" version="1.0"/>&#x0A;<refactoring accessors="true" comment="Delete element from project &apos;StreamAPI&apos;&#x0D;&#x0A;- Original project: &apos;StreamAPI&apos;&#x0D;&#x0A;- Original element: &apos;Practice.java&apos;" description="Delete element" element1="/src&lt;{Practice.java" elements="1" flags="589830" id="org.eclipse.jdt.ui.delete" resources="0" stamp="1672915864143" subPackages="false" version="1.0"/>&#x0A;<refactoring accessors="true" comment="Delete element from project &apos;StreamAPI&apos;&#x0D;&#x0A;- Original project: &apos;StreamAPI&apos;&#x0D;&#x0A;- Original element: &apos;UsingStreamsAsMethod.java&apos;" description="Delete element" element1="/src&lt;{UsingStreamsAsMethod.java" elements="1" flags="589830" id="org.eclipse.jdt.ui.delete" resources="0" stamp="1672915909037" subPackages="false" version="1.0"/>&#x0A;&#x0A;<refactoring accessors="true" comment="Delete element from project &apos;StreamAPI&apos;&#x0D;&#x0A;- Original project: &apos;StreamAPI&apos;&#x0D;&#x0A;- Original element: &apos;DuplicateElementsInArray.java&apos;" description="Delete element" element1="/src&lt;{DuplicateElementsInArray.java" elements="1" flags="589830" id="org.eclipse.jdt.ui.delete" resources="0" stamp="1673010621366" subPackages="false" version="1.0"/>&#x0A;&#x0A;<refactoring comment="Extract local variable &apos;array&apos; from expression &apos;Arrays.stream(ar).boxed().toArray(Integer []::new)&apos;&#x0D;&#x0A;- Original project: &apos;StreamAPI&apos;&#x0D;&#x0A;- Variable name: &apos;array&apos;&#x0D;&#x0A;- Destination method: &apos;SecondHighestInArray.main(...)&apos;&#x0D;&#x0A;- Variable expression: &apos;Arrays.stream(ar).boxed().toArray(Integer []::new)&apos;&#x0D;&#x0A;- Replace occurrences of expression with variable" description="Extract local variable &apos;array&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;{SecondHighestInArray.java" name="array" replace="true" selection="376 49" stamp="1673013482041" varType="false" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;collect&apos; from expression &apos;Stream.of(array).collect(Collectors.toSet())&apos;&#x0D;&#x0A;- Original project: &apos;StreamAPI&apos;&#x0D;&#x0A;- Variable name: &apos;collect&apos;&#x0D;&#x0A;- Destination method: &apos;SecondHighestInArray.main(...)&apos;&#x0D;&#x0A;- Variable expression: &apos;Stream.of(array).collect(Collectors.toSet())&apos;&#x0D;&#x0A;- Replace occurrences of expression with variable" description="Extract local variable &apos;collect&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;{SecondHighestInArray.java" name="collect" replace="true" selection="518 44" stamp="1673013570574" varType="false" version="1.0"/>&#x0A;&#x0A;&#x0A;<refactoring comment="Extract local variable &apos;collect2&apos; from expression &apos;collect.stream().sorted((x,y) -&gt; y - x).collect(Collectors.toList())&apos;&#x0D;&#x0A;- Original project: &apos;StreamAPI&apos;&#x0D;&#x0A;- Variable name: &apos;collect2&apos;&#x0D;&#x0A;- Destination method: &apos;SecondHighestInArray.main(...)&apos;&#x0D;&#x0A;- Variable expression: &apos;collect.stream().sorted((x,y) -&gt; y - x).collect(Collectors.toList())&apos;&#x0D;&#x0A;- Replace occurrences of expression with variable" description="Extract local variable &apos;collect2&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;{SecondHighestInArray.java" name="collect2" replace="true" selection="613 64" stamp="1673013699709" varType="false" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;integer&apos; from expression &apos;collect2.get(1)&apos;&#x0D;&#x0A;- Original project: &apos;StreamAPI&apos;&#x0D;&#x0A;- Variable name: &apos;integer&apos;&#x0D;&#x0A;- Destination method: &apos;SecondHighestInArray.main(...)&apos;&#x0D;&#x0A;- Variable expression: &apos;collect2.get(1)&apos;&#x0D;&#x0A;- Replace occurrences of expression with variable" description="Extract local variable &apos;integer&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;{SecondHighestInArray.java" name="integer" replace="true" selection="732 15" stamp="1673013717077" varType="false" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;collect3&apos; from expression &apos;Stream.of(ar).collect(Collectors.toSet())&apos;&#x0D;&#x0A;- Original project: &apos;StreamAPI&apos;&#x0D;&#x0A;- Variable name: &apos;collect3&apos;&#x0D;&#x0A;- Destination method: &apos;SecondHighestInArray.main(...)&apos;&#x0D;&#x0A;- Variable expression: &apos;Stream.of(ar).collect(Collectors.toSet())&apos;&#x0D;&#x0A;- Replace occurrences of expression with variable" description="Extract local variable &apos;collect3&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;{SecondHighestInArray.java" name="collect3" replace="true" selection="892 41" stamp="1673014124337" varType="false" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;array&apos; from expression &apos;Arrays.stream(ar).boxed().toArray(Integer []::new)&apos;&#x0D;&#x0A;- Original project: &apos;StreamAPI&apos;&#x0D;&#x0A;- Variable name: &apos;array&apos;&#x0D;&#x0A;- Destination method: &apos;SecondHighestInArray.main(...)&apos;&#x0D;&#x0A;- Variable expression: &apos;Arrays.stream(ar).boxed().toArray(Integer []::new)&apos;&#x0D;&#x0A;- Replace occurrences of expression with variable" description="Extract local variable &apos;array&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;{SecondHighestInArray.java" name="array" replace="true" selection="494 49" stamp="1673016015285" varType="false" version="1.0"/>
</session>